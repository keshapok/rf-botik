name: Build Bot EXE

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET 8.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install OpenCV dependencies
      run: |
        choco install opencv -y
        refreshenv

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

    - name: Fix Resources.resx
      run: |
        # Удаляем бинарные ресурсы, если они вызывают ошибки
        if (Test-Path "rf-bot/Resources.resx") {
          $content = [System.IO.File]::ReadAllText("rf-bot/Resources.resx")
          $content = $content -replace '<data name=".*" type="System.Resources.ResXFileRef.*>.*</data>', ''
          [System.IO.File]::WriteAllText("rf-bot/Resources.resx", $content)
        }

    - name: Restore dependencies
      run: dotnet restore --ignore-failed-sources
      working-directory: rf-bot

    - name: Build
      run: dotnet build -c Release --no-restore -p:EnableDefaultCompileItems=false
      working-directory: rf-bot

    - name: Publish
      run: |
        dotnet publish -c Release `
          -r win-x64 `
          -p:PublishSingleFile=true `
          -p:SelfContained=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          --no-build
      working-directory: rf-bot

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: RF-Bot-Release
        path: rf-bot/bin/Release/net8.0-windows/win-x64/publish/
